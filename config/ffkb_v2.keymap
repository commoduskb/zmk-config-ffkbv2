/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* Do I need all theses includes */ 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define DEFAULT 0
#define NAV     1
#define MOUSE   2
#define MEDIA   3
#define NUM     4
#define SYM     5
#define FUN     6


&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};


/ { keymap {
        compatible = "zmk,keymap";

        DEFAULT {
        bindings = <
            &kp Q           &kp W           &kp F           &kp P           &kp B                &kp J           &kp L           &kp U           &kp Y           &kp QUOT
            &mt GUI A       &mt LALT R      &mt LCTL S      &mt LSHIFT T    &kp G                &kp M           &mt RSHIFT N    &mt RCTL E      &mt RALT I      &mt RGUI O
            &kp Z           &kp X           &kp C           &kp D           &kp V                &kp K           &kp H           &kp COMMA       &kp DOT         &kp SLASH

            &lt 3 ESC     &lt 1 SPACE     &lt 2 TAB     &lt 5 ENTER     &lt 4 BSPC      &lt 6 DEL
        >;
    };

    nav {
        bindings = <
            &none    &none    &none      &none      &none  &kp LC(Y)       &kp LC(V)     &kp LC(C)     &kp LC(X)       &kp LC(Z)
            &kp LGUI        &kp LALT        &kp LCTL        &kp LSHIFT      &none                &caps_word    &kp LEFT         &kp UP          &kp DOWN         &kp RIGHT
            &none           &none           &none           &none           &none                &none  &kp HOME      &kp PGUP     &kp PGDN         &kp END

                                            &none           &none           &none           &kp ENTER       &kp BSPC            &kp DEL
        >;
    };

    mouse {
        bindings = <
            &none       &none           &none           &none           &none           &none &kp LC(Y)       &kp LC(V)       &kp LC(C)       &kp LC(X)       &kp LC(Z)
            &kp LGUI        &kp LALT        &kp LCTL        &kp LSHIFT      &none                &none           &mmv MOVE_LEFT      &mmv MOVE_UP        &mmv MOVE_DOWN      &mmv MOVE_RIGHT
            &none           &none      &none        &none      &none          &none           &none           &none           &none           &none

                            &none           &none           &none           &none        &none            &none
        >;
    };

    media {
        bindings = <
            &none           &none           &none           &none           &none                &none           &none           &none           &none           &none
            &kp LGUI        &kp LALT        &kp LCTL        &kp LSHIFT      &none                &none           &kp M_PREV      &kp VOLD        &kp VOLU        &kp M_NEXT
            &none           &none           &none           &none           &none                &none           &none           &none        &none        &none

                                        &none           &none                &none        &kp M_STOP      &kp M_PLAY      &none
        >;
    };


    num {
        bindings = <
            &kp LBRC        &kp N7         &kp N8         &kp N9         &kp RBRC                &none           &none           &none           &none      &none                
            &kp SCLN        &kp N4         &kp N5         &kp N6         &kp EQUAL               &none           &kp RSHIFT      &kp RCTL        &kp RALT        &kp RGUI                     
            &kp GRAVE       &kp N1         &kp N2         &kp N3         &kp BSLH                &none           &none           &none           &none           &none                

                                &kp DOT         &kp N0              &kp MINUS              &none           &none           &none           
        >;

    };


    sym {
        bindings = <
            &kp LBRC        &kp AMPS       &kp STAR       &kp LPAR       &kp RBRC                &none           &none           &none           &none           &none                
            &kp COLN        &kp DLR        &kp PRCNT      &none      &kp PLUS                &kp RSHIFT      &kp RCTL        &kp RALT        &kp RGUI        &none                
            &kp GRAVE       &kp EXCL       &kp AT         &kp HASH       &kp PIPE                &none           &none           &none           &none           &none                

                                            &none           &none           &none           &kp LPAR        &kp RPAR            &kp UNDS
        >;
    };



    fun {
        bindings = <
            &none           &none           &none           &none           &bootloader          &kp F12         &kp F7         &kp F8         &kp F9         &none
            &kp RSHIFT      &kp RCTL        &kp RALT        &kp RGUI        &none                &kp F11         &kp F4         &kp F5         &kp F6         &kp SLCK
            &none           &none           &none           &none           &none                &kp F10         &kp F1         &kp F2         &kp F3         &kp PAUS

                                            &none           &none           &none           &none         &kp SPACE           &kp TAB
        >;

    };

    fun {
        bindings = <
            &kp F12         &kp F7         &kp F8         &kp F9         &none                &none           &none           &none           &none           &bootloader          
            &kp F11         &kp F4         &kp F5         &kp F6         &none                &kp RSHIFT      &kp RCTL        &kp RALT        &kp RGUI        &none                
            &kp F10         &kp F1         &kp F2         &kp F3         &none                &none           &none           &none           &none           &none                

                                        &kp APP         &kp SPACE           &kp TAB          &none           &none           &none           
        >;

    };

};
};